#ifndef VALIDATION_H
#define VALIDATION_H

#include <string>

/**
 * Проверяет, является ли переданная строка допустимым именем.
 *
 * Допустимое имя должно:
 * - Не быть пустым.
 * - Содержать не более 100 символов.
 * - Не содержать управляющих символов.
 *
 * @param str Строка для проверки.
 * @return Возвращает true, если строка является допустимым именем, иначе — false.
 */
bool isValidName(const std::string& str);

/**
 * Проверяет корректность названия группы в соответствии с заданными правилами форматирования.
 * Название группы не должно превышать 100 символов, не должно содержать управляющих символов
 * и может состоять из цифр, пробелов, дефисов, точек и определённых буквенных символов.
 * Также допускается использование символов из расширенных наборов.
 *
 * @param str Строка с названием группы для проверки.
 * @return true, если название группы соответствует правилам; иначе — false.
 */
bool isValidGroupName(const std::string& str);

/**
 * Проверяет, соответствует ли переданная строка дате в формате "ДД.ММ.ГГГГ".
 *
 * Корректная строка даты должна соответствовать следующему шаблону:
 * - ДД — двухзначный день.
 * - ММ — двухзначный месяц.
 * - ГГГГ — четырёхзначный год.
 *
 * @param date Строка с датой для проверки.
 * @return true, если строка соответствует ожидаемому формату, иначе — false.
 */
bool isValidDate(const std::string& date);

/**
 * Проверяет, является ли переданный год допустимым.
 *
 * Допустимый год — это значение в диапазоне от 2000 до 2025 включительно.
 *
 * @param year Год для проверки.
 * @return true, если год входит в диапазон 2000–2025; иначе — false.
 */
bool isValidYear(int year);

/**
 * Очищает буфер ввода от оставшихся символов и сбрасывает состояние потока.
 *
 * Функция сбрасывает флаги ошибок потока ввода, такие как ошибки ввода неверного типа,
 * с помощью `std::cin.clear()`. Затем удаляет оставшиеся символы из буфера ввода
 * до и включая символ новой строки с использованием `std::cin.ignore()`.
 * Максимальное количество игнорируемых символов задаётся через
 * `std::numeric_limits<std::streamsize>::max()`.
 *
 * Эта функция полезна в случаях, когда ошибочный или неожиданный ввод может
 * оставить буфер ввода в состоянии, мешающем последующим операциям ввода.
 */
void clearInputBuffer();

#endif